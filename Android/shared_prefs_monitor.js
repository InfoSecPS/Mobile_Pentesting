Java.perform(function() {
    // Monitor SharedPreferences
    var SharedPreferencesImpl = Java.use('android.app.SharedPreferencesImpl');
    var SharedPreferencesEditor = Java.use('android.app.SharedPreferencesImpl$EditorImpl');

    // Hook all put methods of Editor
    SharedPreferencesEditor.putString.implementation = function(key, value) {
        console.log('[*] SharedPreferences.putString called');
        console.log('[*] Key: ' + key + ', Value: ' + value);
        return this.putString(key, value);
    };

    SharedPreferencesEditor.putInt.implementation = function(key, value) {
        console.log('[*] SharedPreferences.putInt called');
        console.log('[*] Key: ' + key + ', Value: ' + value);
        return this.putInt(key, value);
    };

    SharedPreferencesEditor.putLong.implementation = function(key, value) {
        console.log('[*] SharedPreferences.putLong called');
        console.log('[*] Key: ' + key + ', Value: ' + value);
        return this.putLong(key, value);
    };

    SharedPreferencesEditor.putBoolean.implementation = function(key, value) {
        console.log('[*] SharedPreferences.putBoolean called');
        console.log('[*] Key: ' + key + ', Value: ' + value);
        return this.putBoolean(key, value);
    };

    SharedPreferencesEditor.putFloat.implementation = function(key, value) {
        console.log('[*] SharedPreferences.putFloat called');
        console.log('[*] Key: ' + key + ', Value: ' + value);
        return this.putFloat(key, value);
    };

    // Hook the commit and apply methods
    SharedPreferencesEditor.commit.implementation = function() {
        console.log('[*] SharedPreferences.commit called');
        return this.commit();
    };

    SharedPreferencesEditor.apply.implementation = function() {
        console.log('[*] SharedPreferences.apply called');
        this.apply();
    };

    // Hook get methods of SharedPreferences
    SharedPreferencesImpl.getString.implementation = function(key, defValue) {
        var value = this.getString(key, defValue);
        console.log('[*] SharedPreferences.getString called');
        console.log('[*] Key: ' + key + ', Value: ' + value);
        return value;
    };

    SharedPreferencesImpl.getInt.implementation = function(key, defValue) {
        var value = this.getInt(key, defValue);
        console.log('[*] SharedPreferences.getInt called');
        console.log('[*] Key: ' + key + ', Value: ' + value);
        return value;
    };

    SharedPreferencesImpl.getLong.implementation = function(key, defValue) {
        var value = this.getLong(key, defValue);
        console.log('[*] SharedPreferences.getLong called');
        console.log('[*] Key: ' + key + ', Value: ' + value);
        return value;
    };

    SharedPreferencesImpl.getBoolean.implementation = function(key, defValue) {
        var value = this.getBoolean(key, defValue);
        console.log('[*] SharedPreferences.getBoolean called');
        console.log('[*] Key: ' + key + ', Value: ' + value);
        return value;
    };

    SharedPreferencesImpl.getFloat.implementation = function(key, defValue) {
        var value = this.getFloat(key, defValue);
        console.log('[*] SharedPreferences.getFloat called');
        console.log('[*] Key: ' + key + ', Value: ' + value);
        return value;
    };
});
